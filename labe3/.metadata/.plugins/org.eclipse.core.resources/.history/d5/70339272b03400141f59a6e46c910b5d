#include "derivative.h"
#include "clock.h"
#include <stdio.h>

#define PIN1_MASK (1<<1)
#define PIN2_MASK (1<<2)
#define PIN3_MASK (1<<3)
#define PIN_MASK PIN1_MASK|PIN2_MASK|PIN3_MASK

void initialiseCharlieplexing(void){
	SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
	
	PORTD_PCR1 = PORT_PCR_MUX(1)|PORT_PCR_DSE_MASK;
	PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_DSE_MASK;
	PORTD_PCR3 = PORT_PCR_MUX(1)|PORT_PCR_DSE_MASK;
}

void setLED(int ledNum){
	int PDOR_Array[6] = {	(GPIOD_PDOR|PIN_MASK)&~PIN3_MASK, 
							(GPIOD_PDOR|PIN_MASK)&~PIN1_MASK, 
							(GPIOD_PDOR|PIN_MASK)&~PIN2_MASK, 
							(GPIOD_PDOR|PIN_MASK)&~PIN1_MASK,
							(GPIOD_PDOR|PIN_MASK)&~PIN3_MASK,
							(GPIOD_PDOR|PIN_MASK)&~PIN2_MASK
	};
	
	int PDDR_Array[6] = {	(GPIOD_PDDR|PIN_MASK)&~PIN2_MASK,
							(GPIOD_PDDR|PIN_MASK)&~PIN2_MASK,
							(GPIOD_PDDR|PIN_MASK)&~PIN3_MASK,
							(GPIOD_PDDR|PIN_MASK)&~PIN3_MASK,
							(GPIOD_PDDR|PIN_MASK)&~PIN1_MASK,
							(GPIOD_PDDR|PIN_MASK)&~PIN1_MASK
	};
	
	GPIOD_PDOR = PDOR_Array[(ledNum)];
	GPIOD_PDDR = PDDR_Array[(ledNum)];
	                        
}

void initialiseADC (void){
		SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
		
		PORTC_PCR0 = PORT_PCR_MUX(0);
		SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
		ADC0_SC2 = ADC_SC2_REFSEL(0);
		ADC0_SC3 = 0;
		ADC0_CFG1 = ADC_CFG1_ADIV(2)|ADC_CFG1_MODE(2)|ADC_CFG1_ADICLK(0);
		ADC0_CFG2 = ADC_CFG2_MUXSEL_MASK;
}

int doADCConversion(void){
	ADC0_SC1A = ADC_SC1_ADCH(19);
	while((ADC0_SC1A&ADC_SC1_COCO_MASK)==0){
		
	}
	return ADC0_RA;
}

int main(void){
	clock_initialise();
	initialiseADC();
	initialiseCharlieplexing();
	for(;;){
		int result = doADCConversion();
		printf("The result is %d\n", result);
		setLED((result/170));
	}
	return 0;
}
